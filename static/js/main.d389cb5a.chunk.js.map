{"version":3,"sources":["About.tsx","HeaderText.tsx","Header.tsx","Feature.tsx","MyFooter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Container","styled","div","MobileContainer","StyledParagraph","Paragraph","StyledStar","Star","StyledButton","Button","SkillItem","MyIcon","style","margin","Avatar","size","src","AboutTitle","isVisible","height","Box","align","justify","direction","pad","vertical","animation","type","undefined","Heading","color","alignSelf","ParagraphContainer","Skills","level","textAlign","horizontal","label","About","useContext","ResponsiveContext","partialVisibility","offset","top","bottom","Grid","rows","columns","gap","areas","name","start","end","gridArea","items","config","mass","tension","friction","HeaderText","useState","toggle","set","trail","useTrail","length","opacity","x","from","onClick","map","index","rest","key","className","transform","interpolate","Header","props","useSpring","left","width","background","textIndent","textIindent","to","useCallback","next","a","FeatureItems","Text","weight","Feature","MyFooter","Footer","Anchor","href","icon","theme","global","font","family","paragraph","medium","maxWidth","anchor","hover","textDecoration","App","Grommet","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iiCAQA,IAAMA,EAAYC,UAAOC,IAAV,KAMTC,EAAkBF,UAAOC,IAAV,KAMfE,EAAkBH,kBAAOI,IAAPJ,CAAH,KAKfK,EAAaL,kBAAOM,IAAPN,CAAH,KAKVO,EAAeP,kBAAOQ,IAAPR,CAAH,KAIZS,EAAYT,UAAOC,IAAV,KAKTS,EAAmB,WAKvB,OACE,yBAAKC,MALO,CACZC,OAAQ,WAKN,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLC,IAAI,qEAUNC,EAAqC,SAAC,GAAwB,IAAD,IAAtBC,iBAAsB,SACjE,OACE,yBAAKN,MAAO,CAACO,OAAQ,SAEjBD,GACE,kBAACE,EAAA,EAAD,CACEC,MAAM,SACNC,QAAQ,SACRC,UAAU,MACVC,IAAK,CAAEC,SAAU,OACjBC,UAAWR,EAAY,CAAES,KAAM,UAAWZ,KAAM,cAAYa,GAE5D,kBAACC,EAAA,EAAD,CAASC,MAAM,gBAAgBC,UAAU,UAAzC,eAcNC,EAAyC,SAAC,GAAY,IAAXjB,EAAU,EAAVA,KAC/C,OACE,oCAEa,SAARA,GAA2B,UAARA,EAClB,kBAACX,EAAD,CAAiBS,OAAO,QAAxB,6FAEE,6BACA,6BACA,gDAJF,qNAME,6BACA,+CAPF,2JASE,6BATF,yGAWE,6BACA,+CAZF,wOAgBA,kBAACT,EAAD,CAAiBS,OAAO,QAAxB,6FAEE,6BACA,6BACA,+CACA,6BALF,qNAOE,6BACA,8CACA,6BATF,kQAYE,6BACA,8CACA,6BAdF,0OAuBJoB,EAA6B,SAAC,GAAY,IAAXlB,EAAU,EAAVA,KACnC,OACE,oCACE,kBAACK,EAAA,EAAD,CAAKE,QAAQ,SAASE,IAAK,CAAEC,SAAU,OAASF,UAAU,OAC1D,kBAACjB,EAAD,CAAYwB,MAAM,WAClB,kBAACD,EAAA,EAAD,CAASK,MAAM,IAAIC,UAAU,SAAStB,OAAO,QAA7C,UAIA,kBAACO,EAAA,EAAD,CAAKG,UAAU,MAAMD,QAAQ,UAAUE,IAAK,CAAEY,WAAY,SAE7C,SAARrB,GAA2B,UAARA,EAClB,oCACE,kBAACP,EAAD,CAAcsB,MAAM,UAAUO,MAAM,OAAOtB,KAAK,UAChD,kBAACP,EAAD,CAAcsB,MAAM,UAAUO,MAAM,aAAatB,KAAK,UACtD,kBAACP,EAAD,CAAcsB,MAAM,UAAUO,MAAM,KAAKtB,KAAK,UAC9C,kBAACP,EAAD,CAAcsB,MAAM,UAAUO,MAAM,MAAMtB,KAAK,UAC/C,kBAACP,EAAD,CAAcsB,MAAM,UAAUO,MAAM,YAAYtB,KAAK,WAGvD,oCACE,kBAACL,EAAD,aACA,kBAACA,EAAD,mBACA,kBAACA,EAAD,WACA,kBAACA,EAAD,YACA,kBAACA,EAAD,sBASD4B,EAAkB,WAC7B,IAAMvB,EAAOwB,qBAAWC,KAExB,OACE,oCAEa,SAARzB,GAA2B,UAARA,EAClB,kBAAC,IAAD,CAAkB0B,mBAAmB,EAAMC,OAAQ,CAACC,IAAK,IAAKC,OAAQ,OACnE,gBAAE1B,EAAF,EAAEA,UAAF,OACC,kBAAClB,EAAD,KACA,kBAAC,EAAD,CAAYkB,UAAWA,IACrB,oCACIA,GACA,kBAACE,EAAA,EAAD,CAAKI,IAAK,CAAEY,WAAY,OAASV,UAAW,CAAEC,KAAM,UAAWZ,KAAM,UACnE,kBAAC8B,EAAA,EAAD,CACEC,KAAM,CAAC,QAAS,SAChBC,QAAS,CAAC,QAAS,SACnBC,IAAI,QAGJjB,UAAU,SACVkB,MAAO,CACL,CAAEC,KAAM,OAAQC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACxC,CAAEF,KAAM,YAAaC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IAC7C,CAAEF,KAAM,SAAUC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,MAG5C,kBAAChC,EAAA,EAAD,CAAKiC,SAAS,QACZ,kBAAC,EAAD,OAEF,kBAACjC,EAAA,EAAD,CAAKiC,SAAS,aACZ,kBAAC,EAAD,CAAoBtC,KAAMA,KAE5B,kBAACK,EAAA,EAAD,CAAKiC,SAAS,UACZ,kBAAC,EAAD,CAAQtC,KAAMA,YAU9B,kBAACZ,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,MAEI,cAAEe,UAAF,OACA,oCAGM,oCACE,kBAACE,EAAA,EAAD,KACE,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,CAAoBL,KAAMA,KAE5B,kBAACK,EAAA,EAAD,KACE,kBAAC,EAAD,CAAQL,KAAMA,a,uSCzNxC,IAAMuC,EAAQ,CAAC,QAAS,OAAQ,KAAM,UAChCC,EAAS,CAAEC,KAAM,EAAGC,QAAS,IAAMC,SAAU,KAE7C1D,EAAYC,UAAOC,IAAV,KAWFyD,EAAuB,WAAO,IAAD,EAClBC,oBAAkB,GADA,mBACjCC,EADiC,KACzBC,EADyB,KAElCC,EAAQC,YAASV,EAAMW,OAAQ,CACnCV,SACAW,QAASL,EAAS,EAAI,EACtBM,EAAGN,EAAS,EAAI,IAChB1C,OAAQ0C,EAAS,GAAK,EACtBO,KAAM,CAAEF,QAAS,EAAGC,EAAG,OAGzB,OACE,kBAAC,EAAD,CAAWE,QAAS,kBAAMP,GAAKD,KAC7B,6BACGE,EAAMO,KAAI,WAA8BC,GAA9B,IAAGJ,EAAH,EAAGA,EAAGhD,EAAN,EAAMA,OAAWqD,EAAjB,qCACT,kBAAC,IAAStE,IAAV,CACEuE,IAAKnB,EAAMiB,GACXG,UAAU,cACV9D,MAAK,2BACA4D,GADA,IAEHG,UAAWR,EAAES,aAAY,SAACT,GAAD,8BAAwBA,EAAxB,eAG3B,kBAAC,IAASjE,IAAV,CAAcU,MAAO,CAAEO,WAAWmC,EAAMiB,W,2KCnCpD,IAAMvE,EAAYC,UAAOC,IAAV,KAOF2E,EAAmB,WAC9B,IAAMC,EAAQC,YAAU,CACtBX,KAAM,CACJY,KAAM,KACNrC,IAAK,KACLsC,MAAO,KACP9D,OAAQ,KACR+D,WAAY,aACZC,WAAY,OACZC,YAAa,WAEfC,GAAIC,sBAAW,uCAAC,WAAOC,GAAP,SAAAC,EAAA,sEACRD,EAAK,CACTP,KAAM,KACNrC,IAAK,KACLsC,MAAO,OACP9D,OAAQ,OACR+D,WAAY,cANA,uBAQRK,EAAK,CACTN,MAAO,MACPD,KAAM,KACN7D,OAAQ,OACRwB,IAAK,KACLuC,WAAY,yBAbA,uBAeRK,EAAK,CACT5C,IAAK,KACLsC,MAAO,OACP9D,OAAQ,MACR+D,WAAY,cAnBA,uBAqBRK,EAAK,CACTN,MAAO,MACPD,KAAM,MACN7D,OAAQ,OACR+D,WAAY,gBAzBA,wBA2BRK,EAAK,CACT5C,IAAK,KACLxB,OAAQ,OACR6D,KAAM,KACNC,MAAO,OACPC,WAAY,cAhCA,yBAmCRK,EAAK,CAAEJ,WAAY,QAnCX,4CAAD,sDAoCZ,MAGL,OACE,kBAAC,EAAD,KACE,kBAAC,IAASjF,IAAV,CAAcwE,UAAU,aAAa9D,MAAOkE,GAC1C,kBAAC,EAAD,S,oPC5DR,IAAM9E,GAAYC,kBAAOmB,IAAPnB,CAAH,MAKTK,GAAaL,kBAAOM,IAAPN,CAAH,MASVwF,GAAwC,SAAC,GAAY,IAAX1E,EAAU,EAAVA,KAC9C,OACE,oCACE,kBAACK,EAAA,EAAD,CAAKiC,SAAS,QACZ,kBAACjC,EAAA,EAAD,CAAKC,MAAM,SAASR,OAAQ,CAAEY,SAAU,QACtC,kBAACiE,EAAA,EAAD,CAAMvD,UAAU,SAASwD,OAAO,OAAO9E,OAAQ,CAAE+B,OAAQ,QAAzD,gEAGA,kBAAC,IAAD,CAAc7B,KAAK,SAErB,kBAACK,EAAA,EAAD,CAAKI,IAAc,SAART,GAA2B,UAARA,EAAoB,CAAEqB,WAAY,OAAS,IACvE,kBAAC/B,EAAA,EAAD,CAAWQ,OAAQ,CAAEuB,WAAY,QAAjC,yGAEE,6BAFF,oFAIE,6BAJF,0CAME,6BANF,gJAWJ,kBAAChB,EAAA,EAAD,CAAKiC,SAAS,SACZ,kBAACjC,EAAA,EAAD,CAAKC,MAAM,SAASR,OAAQ,CAAEY,SAAU,QACtC,kBAACiE,EAAA,EAAD,CAAMvD,UAAU,SAASwD,OAAO,OAAO9E,OAAQ,CAAE+B,OAAQ,QAAzD,gEAGA,kBAAC,IAAD,CAAc7B,KAAK,SAErB,kBAACK,EAAA,EAAD,CAAKI,IAAc,SAART,GAA2B,UAARA,EAAoB,CAAEqB,WAAY,OAAS,IACvE,kBAAC/B,EAAA,EAAD,CAAWQ,OAAQ,CAAEuB,WAAY,QAAjC,6SAUGwD,GAAoB,WAC/B,IAAM7E,EAAOwB,qBAAWC,KACxB,OACE,kBAAC,GAAD,CAAW0C,WAAW,aACpB,kBAAC9D,EAAA,EAAD,CAAKG,UAAU,MAAMD,QAAQ,SAASE,IAAK,CAAEmB,IAAK,QAChD,kBAAC,GAAD,CAAYb,MAAM,WAClB,kBAACD,EAAA,EAAD,CAASK,MAAM,IAAIC,UAAU,SAAStB,OAAO,QAA7C,aAIF,kBAACO,EAAA,EAAD,CAAKW,UAAU,UAEF,SAARhB,GAA2B,UAARA,EAClB,kBAAC8B,EAAA,EAAD,CACEC,KAAM,CAAC,UACPC,QAAS,CAAC,SAAU,UACpBC,IAAI,SAEJxB,IAAK,CAAEC,SAAU,OACjBwB,MAAO,CACL,CAAEC,KAAM,OAAQC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,IACxC,CAAEF,KAAM,QAASC,MAAO,CAAC,EAAG,GAAIC,IAAK,CAAC,EAAG,MAG3C,kBAAC,GAAD,CAAcrC,KAAMA,KAGtB,kBAACK,EAAA,EAAD,CAAKW,UAAU,UACb,kBAAC,GAAD,CAAchB,KAAMA,Q,sDCpFrB8E,GAAqB,WAChC,OACE,kBAACC,GAAA,EAAD,CAAQtE,IAAI,SAASD,UAAU,UAC7B,kBAACH,EAAA,EAAD,CAAKG,UAAU,MAAMD,QAAQ,UAC7B,kBAACyE,GAAA,EAAD,CACEC,KAAK,gCACLC,KAAM,kBAAC,KAAD,CAAclF,KAAK,QAAQe,MAAM,oBAEzC,kBAACiE,GAAA,EAAD,CACEC,KAAK,gCACLC,KAAM,kBAAC,KAAD,CAAelF,KAAK,QAAQe,MAAM,oBAE1C,kBAACiE,GAAA,EAAD,CACEC,KAAK,wCACLC,KAAM,kBAAC,KAAD,CAAYlF,KAAK,QAAQe,MAAM,oBAEvC,kBAACiE,GAAA,EAAD,CACEC,KAAK,4CACLC,KAAM,kBAAC,KAAD,CAAiBlF,KAAK,QAAQe,MAAM,qBAG5C,kBAAC4D,EAAA,EAAD,CAAM5D,MAAM,iBAAZ,0BClBAoE,GAAQ,CACZC,OAAQ,CACNC,KAAM,CACJC,OAAQ,SACRtF,KAAM,OACNI,OAAQ,QAEVA,OAAQ,QAEVmF,UAAW,CACTC,OAAQ,CAAEC,SAAU,UAEtBC,OAAQ,CACNC,MAAO,CACLC,eAAgB,UAgBPC,GAXO,WACpB,OACE,kBAACC,EAAA,EAAD,CAASX,MAAOA,IACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCpBcY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d389cb5a.chunk.js","sourcesContent":["import React, {useContext} from \"react\";\nimport { Avatar, Box, Grid, Heading, Paragraph, Button, ResponsiveContext } from \"grommet\";\nimport { Star } from \"grommet-icons\";\nimport { Element } from \"react-scroll\";\nimport styled from \"styled-components\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 65vh;\n  background-color: #add8e6;\n`;\n\nconst MobileContainer = styled.div`\n  height: 130vh;\n  background-color: #add8e6;\n  padding: 0 4vw;\n`;\n\nconst StyledParagraph = styled(Paragraph)`\n  font-family: \"Noto Sans Japanese\";\n  line-height: 2;\n`;\n\nconst StyledStar = styled(Star)`\n  align-self: center;\n  padding: 0 1vw;\n`;\n\nconst StyledButton = styled(Button)`\n  background-color: #f2f2f2;\n`;\n\nconst SkillItem = styled.div`\n  border-radius: 5%;\n  background-color: #f2f2f2;\n`\n\nconst MyIcon: React.FC = () => {\n  const style = {\n    margin: \"0 auto\"\n  };\n\n  return (\n    <div style={style}>\n      <Avatar\n        size=\"xlarge\"\n        src=\"https://ca.slack-edge.com/T02D9RVN1-UAZ6SCS8Z-110785fffc90-512\"\n      />\n    </div>\n  )\n};\n\ntype TAbountTitle = {\n  isVisible?: boolean\n}\n\nconst AboutTitle: React.FC<TAbountTitle> = ({isVisible = true}) => {\n  return (\n    <div style={{height: \"28vh\"}}>\n      {\n        isVisible &&  (\n          <Box\n            align=\"center\"\n            justify=\"center\"\n            direction=\"row\"\n            pad={{ vertical: \"7vh\" }}\n            animation={isVisible ? { type: \"slideUp\", size: \"large\" } : undefined}\n          >\n            <Heading color=\"palevioletred\" alignSelf=\"center\">\n              ABOUT ME\n            </Heading>\n          </Box>\n        )\n      }\n    </div>\n  );\n}\n\ntype SizeType = {\n  size: string\n}\n\nconst ParagraphContainer: React.FC<SizeType> = ({size}) => {\n  return (\n    <>\n      {\n        (size != 'small' && size != 'medium') ? (\n          <StyledParagraph margin=\"none\">\n            福岡のサーバーサイドエンジニア\n            <br />\n            <br />\n            <strong>20016年:</strong>\n            就職活動をする中で、エンジニアリングに興味をもち、テックキャンプに通う\n            <br />\n            <strong>2017年:</strong>\n            福岡の勤怠管理、給与計算を制作するITベンチャーにて、\n            <br />\n            サーバーサイドエンジニアとして働く\n            <br />\n            <strong>2018年:</strong>\n            別のフィンテック系ベンチャーに転職。同じくサーバーサイドエンジニアとして働く\n          </StyledParagraph>\n        ) : (\n          <StyledParagraph margin=\"none\">\n            福岡のサーバーサイドエンジニア\n            <br />\n            <br />\n            <strong>20016年</strong>\n            <br />\n            就職活動をする中で、エンジニアリングに興味をもち、テックキャンプに通う\n            <br />\n            <strong>2017年</strong>\n            <br />\n            福岡の勤怠管理、給与計算を制作するITベンチャーにて、\n            サーバーサイドエンジニアとして働く\n            <br />\n            <strong>2018年</strong>\n            <br />\n            別のフィンテック系ベンチャーに転職。同じくサーバーサイドエンジニアとして働く\n          </StyledParagraph>\n        )\n      }\n    </>\n  );\n}\n\nconst Skills: React.FC<SizeType> = ({size}) => {\n  return (\n    <>\n      <Box justify=\"center\" pad={{ vertical: \"5vh\" }} direction=\"row\">\n      <StyledStar color=\"yellow\" />\n      <Heading level=\"3\" textAlign=\"center\" margin=\"none\">\n        SKILL\n      </Heading>\n      </Box>\n      <Box direction=\"row\" justify=\"between\" pad={{ horizontal: \"10vw\" }}>\n        {\n          (size != 'small' && size != 'medium') ? (\n            <>\n              <StyledButton color=\"light-2\" label=\"Ruby\" size=\"small\" />\n              <StyledButton color=\"light-2\" label=\"Javascript\" size=\"small\" />\n              <StyledButton color=\"light-2\" label=\"Go\" size=\"small\" />\n              <StyledButton color=\"light-2\" label=\"AWS\" size=\"small\" />\n              <StyledButton color=\"light-2\" label=\"Terraform\" size=\"small\" />\n            </>\n          ) : (\n            <>\n              <SkillItem>Ruby</SkillItem>\n              <SkillItem>Javascript</SkillItem>\n              <SkillItem>Go</SkillItem>\n              <SkillItem>AWS</SkillItem>\n              <SkillItem>Terraform</SkillItem>\n            </>\n          )\n        }\n      </Box>\n    </>\n  )\n}\n\nexport const About: React.FC = () => {\n  const size = useContext(ResponsiveContext);\n\n  return (\n    <>\n      { \n        (size != 'small' && size != 'medium' ) ? (\n          <VisibilitySensor partialVisibility={true} offset={{top: 100, bottom: 200}} >\n            {({isVisible}) => \n              <Container>\n              <AboutTitle isVisible={isVisible}/>\n                <>\n                  { isVisible && (\n                    <Box pad={{ horizontal: \"7vw\" }} animation={{ type: \"slideUp\", size: \"large\" }} >\n                      <Grid\n                        rows={[\"small\", \"small\"]}\n                        columns={[\"small\", \"large\"]}\n                        gap=\"small\"\n                        // ボックスに含まれおり、中央寄せしたい時は\n                        // alignSelf で中央寄せの指定が出来る\n                        alignSelf=\"center\"\n                        areas={[\n                          { name: \"icon\", start: [0, 0], end: [0, 0] },\n                          { name: \"paragraph\", start: [1, 0], end: [1, 0] },\n                          { name: \"skills\", start: [0, 1], end: [1, 1] },\n                        ]}\n                      >\n                        <Box gridArea=\"icon\">\n                          <MyIcon />\n                        </Box>\n                        <Box gridArea=\"paragraph\">\n                          <ParagraphContainer size={size} />\n                        </Box>\n                        <Box gridArea=\"skills\">\n                          <Skills size={size} />\n                        </Box>\n                      </Grid>\n                    </Box>\n                  )}\n                </>\n              </Container>\n            }\n          </VisibilitySensor>\n        ) : (\n          <MobileContainer>\n            <AboutTitle />\n            <VisibilitySensor>\n              {\n                ({isVisible}) =>\n                <>\n                  {\n                    true && (\n                      <>\n                        <Box>\n                          <MyIcon />\n                        </Box>\n                        <div>\n                          <ParagraphContainer size={size}/>\n                        </div>\n                        <Box>\n                          <Skills size={size} />\n                        </Box>\n                      </>\n                    )\n                  }\n                </>\n              }\n            </VisibilitySensor>\n          </MobileContainer>\n        )\n      }\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { animated, useTrail } from \"react-spring\";\nimport styled from \"styled-components\";\nimport \"./index.css\";\n\nconst items = [\"Hello\", \"This\", \"is\", \"yusuke\"];\nconst config = { mass: 5, tension: 2000, friction: 200 };\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const HeaderText: React.FC = () => {\n  const [toggle, set] = useState<Boolean>(true);\n  const trail = useTrail(items.length, {\n    config,\n    opacity: toggle ? 1 : 0,\n    x: toggle ? 0 : 100,\n    height: toggle ? 80 : 0,\n    from: { opacity: 0, x: 100 },\n  });\n\n  return (\n    <Container onClick={() => set(!toggle)}>\n      <div>\n        {trail.map(({ x, height, ...rest }: any, index) => (\n          <animated.div\n            key={items[index]}\n            className=\"trails-text\"\n            style={{\n              ...rest,\n              transform: x.interpolate((x) => `translate3d(0,${x}px,0)`),\n            }}\n          >\n            <animated.div style={{ height }}>{items[index]}</animated.div>\n          </animated.div>\n        ))}\n      </div>\n    </Container>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { HeaderText } from \"./HeaderText\";\nimport styled from \"styled-components\";\nimport \"./index.css\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  will-change: width, height, left, top;\n  position: relative;\n`;\n\nexport const Header: React.FC = () => {\n  const props = useSpring({\n    from: {\n      left: \"0%\",\n      top: \"0%\",\n      width: \"0%\",\n      height: \"0%\",\n      background: \"lightgreen\",\n      textIndent: \"100%\",\n      textIindent: \"-9999px\",\n    },\n    to: useCallback(async (next) => {\n      await next({\n        left: \"0%\",\n        top: \"0%\",\n        width: \"100%\",\n        height: \"100%\",\n        background: \"lightblue\",\n      });\n      await next({\n        width: \"50%\",\n        left: \"0%\",\n        height: \"100%\",\n        top: \"0%\",\n        background: \"lightgoldenrodyellow\",\n      });\n      await next({\n        top: \"0%\",\n        width: \"100%\",\n        height: \"50%\",\n        background: \"lightpink\",\n      });\n      await next({\n        width: \"50%\",\n        left: \"50%\",\n        height: \"100%\",\n        background: \"lightsalmon\",\n      });\n      await next({\n        top: \"0%\",\n        height: \"100%\",\n        left: \"0%\",\n        width: \"100%\",\n        background: \"lightblue\",\n      });\n      // 最後にテキストタイトルを表示する\n      await next({ textIndent: \"0px\" });\n    }, []),\n  });\n\n  return (\n    <Container>\n      <animated.div className=\"script-box\" style={props}>\n        <HeaderText />\n      </animated.div>\n    </Container>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Heading, Box, Grid, Text, Paragraph, ResponsiveContext } from \"grommet\";\nimport { Star } from \"grommet-icons\";\nimport { GiDiscussion, GiStairsGoal } from \"react-icons/gi\";\nimport styled from \"styled-components\";\n\nconst Container = styled(Box)`\n  width: 100vw;\n  padding: 0 0 5vh 0;\n`;\n\nconst StyledStar = styled(Star)`\n  align-self: center;\n  padding: 0 1vw;\n`;\n\ntype TFeatureItems = {\n  size: string\n}\n\nconst FeatureItems: React.FC<TFeatureItems> = ({size}) => {\n  return (\n    <>\n      <Box gridArea=\"left\">\n        <Box align=\"center\" margin={{ vertical: \"3vh\" }}>\n          <Text textAlign=\"center\" weight=\"bold\" margin={{ bottom: \"2vh\" }}>\n            妥協せず話し合います\n          </Text>\n          <GiDiscussion size=\"150\" />\n        </Box>\n        <Box pad={(size == 'small' || size == 'medium') ? { horizontal: \"2vh\"} : {} }>\n          <Paragraph margin={{ horizontal: \"2vw\" }}>\n            本当にいいプロダクトを作る上では、\n            <br />\n            1. アイデアのブラッシュアップ\n            <br />\n            2. ゴールの共有\n            <br />\n            の為のディスカッションが必須だと考えています。\n          </Paragraph>\n        </Box>\n      </Box>\n      <Box gridArea=\"right\">\n        <Box align=\"center\" margin={{ vertical: \"3vh\" }}>\n          <Text textAlign=\"center\" weight=\"bold\" margin={{ bottom: \"2vh\" }}>\n            技術力向上に拘ります\n          </Text>\n          <GiStairsGoal size=\"150\" />\n        </Box>\n        <Box pad={(size == 'small' || size == 'medium') ? { horizontal: \"2vh\"} : {} }>\n          <Paragraph margin={{ horizontal: \"2vw\" }}>\n            現在は Ruby, Railsを使った業務 がメインですが、 Go, React, Aws\n            など色々なものに興味があり、挑戦したいと思っています。\n          </Paragraph>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport const Feature: React.FC = () => {\n  const size = useContext(ResponsiveContext);\n  return (\n    <Container background=\"lightblue\">\n      <Box direction=\"row\" justify=\"center\" pad={{ top: \"5vh\" }}>\n        <StyledStar color=\"yellow\" />\n        <Heading level=\"3\" textAlign=\"center\" margin=\"none\">\n          STRENGTH\n        </Heading>\n      </Box>\n      <Box alignSelf=\"center\">\n        { \n          (size != 'small' && size != 'medium' ) ? (\n            <Grid\n              rows={[\"medium\"]}\n              columns={[\"medium\", \"medium\"]}\n              gap=\"medium\"\n              // @note ここの padding 指定は top だけでもいいかも\n              pad={{ vertical: \"5vh\" }}\n              areas={[\n                { name: \"left\", start: [0, 0], end: [0, 0] },\n                { name: \"right\", start: [1, 0], end: [1, 0] },\n              ]}\n            >\n              <FeatureItems size={size}/>\n            </Grid>\n          ) : (\n            <Box alignSelf=\"center\">\n              <FeatureItems size={size}/>\n            </Box>\n          )\n        }\n      </Box>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Footer, Text, Anchor, Box } from \"grommet\";\nimport * as Icons from \"grommet-icons\";\n\nexport const MyFooter: React.FC = () => {\n  return(\n    <Footer pad=\"medium\" direction=\"column\">\n      <Box direction=\"row\" justify=\"center\">\n      <Anchor\n        href=\"https://github.com/yusuke-eto\"\n        icon={<Icons.Github size=\"large\" color=\"palevioletred\" />}\n      />\n      <Anchor\n        href=\"https://twitter.com/tt0km0ztm\"\n        icon={<Icons.Twitter size=\"large\" color=\"palevioletred\" />}\n      />\n      <Anchor\n        href=\"https://nasu-engineer.hatenablog.com/\"\n        icon={<Icons.Blog size=\"large\" color=\"palevioletred\" />}\n      />\n      <Anchor\n        href=\"https://www.instagram.com/nasu2568/?hl=ja\"\n        icon={<Icons.Instagram size=\"large\" color=\"palevioletred\" />}\n      />\n      </Box>\n      <Text color=\"palevioletred\">© Yusuke Eto 2020</Text>\n    </Footer>\n  );\n}\n","import React from \"react\";\nimport { Grommet } from \"grommet\";\nimport { About } from \"./About\";\nimport { Header as MyHeader } from \"./Header\";\nimport { Feature } from \"./Feature\";\nimport { MyFooter } from \"./MyFooter\";\n\nconst theme = {\n  global: {\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n    height: \"100%\",\n  },\n  paragraph: {\n    medium: { maxWidth: \"800px\" },\n  },\n  anchor: {\n    hover: {\n      textDecoration: \"none\",\n    },\n  },\n};\n\nconst App: React.FC = () => {\n  return (\n    <Grommet theme={theme}>\n      <MyHeader />\n      <About />\n      <Feature />\n      <MyFooter />\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}